app:
  title: ${BACKSTAGE_TITLE}
  baseUrl: http://localhost:3000

organization:
  name: ${BACKSTAGE_ORG}

backend:
  baseUrl: http://localhost:7007
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  database:
    client: better-sqlite3
    connection: ':memory:'

integrations:
  github:
    - host: github.com
      token: ${GITHUB_TOKEN}
      
techdocs:
  builder: 'local'
  generator:
    runIn: 'docker'
  publisher:
    type: 'local'

auth:
  environment: development
  providers:
    github:
      development:
        clientId: ${BACKSTAGE_GITHUB_CLIENT_ID}
        clientSecret: ${BACKSTAGE_GITHUB_CLIENT_SECRET}
        signIn:
          resolvers:
            - resolver: usernameMatchingUserEntityName
            - resolver: emailMatchingUserEntityProfileEmail
scaffolder:

catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    - type: file
      target: ../../locations/all.yaml
      rules:
        - allow: [ Component, System, API, Resource, Location, Group, User, Template, Presentation ]

kubernetes:
  serviceLocatorMethod:
    type: 'multiTenant'
  clusterLocatorMethods:
    - type: 'config'
      clusters:
        - url: ${KUBERNETES_API_URL}
          name: ${KUBERNETES_CLUSTER_NAME}
          authProvider: 'serviceAccount'
          skipTLSVerify: true
          skipMetricsLookup: true
          serviceAccountToken: ${KUBERNETES_TOKEN}
  customResources:
    - group: 'tekton.dev'
      apiVersion: 'v1'
      plural: 'pipelineruns'
    - group: 'tekton.dev'
      apiVersion: 'v1'
      plural: 'taskruns'

proxy:
  endpoints:
    '/argocd/api':
      target: https://${ARGOCD_SERVER}/api/v1
      changeOrigin: true
      # only if your argocd api has self-signed cert
      secure: false
      # We need to define an environment variable ARGOCD_AUTH_TOKEN=argocd.token=<token> to be able to authenticate
      headers:
        Cookie:
          $env: ARGOCD_AUTH_TOKEN
